import React, { useEffect, useState } from 'react';
import Snackbar from '@mui/material/Snackbar';
import MuiAlert from '@mui/material/Alert';
import Slide from '@mui/material/Slide';

const Alert = React.forwardRef(function Alert(props, ref) {
    return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});

const SnackbarComponent = () => {
    const [open, setOpen] = useState(false);
    const [messageQueue, setMessageQueue] = useState([]);

    useEffect(() => {
        const eventSource = new EventSource('http://localhost:5000/trigger-snackbar');

        eventSource.onmessage = function(event) {
            const { message, count} = JSON.parse(event.data);
            setMessageQueue(prevQueue => [...prevQueue, message + count]);
        };

        eventSource.onerror = function(err) {
            console.error('EventSource failed:', err);
            eventSource.close();
        };

        return () => {
            eventSource.close();
        };
    }, []);

    useEffect(() => {
        const displayNextMessage = () => {
            if (messageQueue.length > 0) {
                setOpen(true);
                setMessageQueue(prevQueue => prevQueue.slice(1));
            }
        };

        const interval = setInterval(displayNextMessage, 6000);

        return () => {
            clearInterval(interval);
        };
    }, [messageQueue]);

    const handleClose = (event, reason) => {
        if (reason === 'clickaway') {
            return;
        }
        setOpen(false);
        setMessageQueue([]);
    };

    return (
        <Snackbar 
        open={open} 
        autoHideDuration={6000} 
        onClose={handleClose} 
        TransitionComponent={Slide}
        TransitionProps={{ timeout: 600 }}
        >
            <Alert onClose={handleClose} severity="info">
                {messageQueue.length > 0 && messageQueue.map((message, index) => (
                    <div key={index}>{message}</div>
                ))}
            </Alert>
        </Snackbar>
    );
};

export default SnackbarComponent;
